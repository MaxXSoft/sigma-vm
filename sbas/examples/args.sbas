  .section insts
  # module initializer
  pop
  ret

main:
  # say hello
  lac   hello
  call  print_str

  # print begin of argument list
  lac   arguments
  call  print_str

  # iterate through all arguments
  bznp  3f
1:
  swap
  # print the current argument
  call  print_str
  # print separator
  dup
  pushu 1
  ne
  bz    2f
  lac   comma
  call  print_str
2:
  loop  1b
3:

  # print end of argument list
  lac end_of_list
  call print_str

  # return
  pushu 0
  ret
main_end:

print_str:
  dup
  pushu 8
  add
  swap
  lddo  0
  sys   9
  pop
  ret

  .section consts
hello:
  .str  "Hello, world!\n"
arguments:
  .str  "Arguments (reversed): ["
comma:
  .str  ", "
end_of_list:
  .str  "]\n"

  .section exports
  .export "main", main, main_end, variadic, 1
